#!/usr/bin/env node
/**
 * –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞
 */

const fs = require('fs');

function testConfiguration() {
    console.log('üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –°–ï–†–í–ï–†–ê');
    console.log('=' + '='.repeat(50));

    let allPassed = true;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ .env
    if (fs.existsSync('.env')) {
        const rootEnv = fs.readFileSync('.env', 'utf8');
        if (rootEnv.includes('SERVER_HOST=')) {
            console.log('‚úÖ –ö–æ—Ä–Ω–µ–≤–æ–π .env —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        } else {
            console.log('‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π .env —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç SERVER_HOST');
            allPassed = false;
        }
    } else {
        console.log('‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
        allPassed = false;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend .env
    if (fs.existsSync('frontend/.env')) {
        const frontendEnv = fs.readFileSync('frontend/.env', 'utf8');
        if (frontendEnv.includes('REACT_APP_API_URL=')) {
            console.log('‚úÖ Frontend .env —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        } else {
            console.log('‚ùå Frontend .env —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç REACT_APP_API_URL');
            allPassed = false;
        }
    } else {
        console.log('‚ùå Frontend .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
        allPassed = false;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ .env.example
    if (fs.existsSync('frontend/.env.example')) {
        console.log('‚úÖ Frontend .env.example —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
        console.log('‚ùå Frontend .env.example —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
        allPassed = false;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤
    if (fs.existsSync('setup-server.bat')) {
        console.log('‚úÖ Windows —Å–∫—Ä–∏–ø—Ç setup-server.bat —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
        console.log('‚ùå Windows —Å–∫—Ä–∏–ø—Ç setup-server.bat –Ω–µ –Ω–∞–π–¥–µ–Ω');
        allPassed = false;
    }

    if (fs.existsSync('setup-server.sh')) {
        console.log('‚úÖ Linux/Mac —Å–∫—Ä–∏–ø—Ç setup-server.sh —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
        console.log('‚ùå Linux/Mac —Å–∫—Ä–∏–ø—Ç setup-server.sh –Ω–µ –Ω–∞–π–¥–µ–Ω');
        allPassed = false;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore
    if (fs.existsSync('.gitignore')) {
        const gitignore = fs.readFileSync('.gitignore', 'utf8');
        if (gitignore.includes('.env') && gitignore.includes('frontend/.env')) {
            console.log('‚úÖ .gitignore –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        } else {
            console.log('‚ùå .gitignore –Ω–µ –∏—Å–∫–ª—é—á–∞–µ—Ç .env —Ñ–∞–π–ª—ã');
            allPassed = false;
        }
    } else {
        console.log('‚ùå .gitignore —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
        allPassed = false;
    }

    console.log('\\n' + '='.repeat(50));
    if (allPassed) {
        console.log('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!');
        console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—é –Ω–∞ –ª—é–±–æ–º —Å–µ—Ä–≤–µ—Ä–µ');
        console.log('‚úÖ IP –∞–¥—Ä–µ—Å –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π');
        console.log('‚úÖ –ù–µ—Ç —Ö–∞—Ä–¥–∫–æ–¥–∞ –≤ –∫–æ–¥–µ');
        console.log('\\nüí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: .\\\\setup-server.bat NEW_IP');
    } else {
        console.log('üí• –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ï–ô!');
        console.log('‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã');
    }
}

testConfiguration();
