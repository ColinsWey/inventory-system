#!/usr/bin/env python3
"""–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Pydantic v2."""

import sys
import traceback

def test_import(module_name, description):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è."""
    try:
        exec(f"import {module_name}")
        print(f"‚úì {description}: OK")
        return True
    except Exception as e:
        print(f"‚úó {description}: –û–®–ò–ë–ö–ê - {e}")
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("=== –¢–ï–°–¢ –ò–ú–ü–û–†–¢–û–í PYDANTIC V2 ===\n")
    
    tests = [
        ("backend.app.core.config", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è"),
        ("backend.app.api.v1.schemas.auth", "–°—Ö–µ–º—ã –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"),
        ("backend.app.api.v1.schemas.product", "–°—Ö–µ–º—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤"),
        ("backend.app.api.v1.schemas.forecast", "–°—Ö–µ–º—ã –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è"),
        ("backend.app.api.v1.schemas.salesdrive", "–°—Ö–µ–º—ã SalesDrive"),
        ("backend.app.api.v1.schemas.import_data", "–°—Ö–µ–º—ã –∏–º–ø–æ—Ä—Ç–∞"),
        ("backend.app.api.v1.schemas.category", "–°—Ö–µ–º—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π"),
        ("backend.app.api.v1.schemas.common", "–û–±—â–∏–µ —Å—Ö–µ–º—ã"),
        ("backend.app.features.auth.schemas", "–°—Ö–µ–º—ã auth feature"),
        ("backend.app.features.inventory.schemas", "–°—Ö–µ–º—ã inventory feature"),
        ("backend.app.features.analytics.schemas", "–°—Ö–µ–º—ã analytics feature"),
        ("backend.app.features.integration.schemas", "–°—Ö–µ–º—ã integration feature"),
    ]
    
    success_count = 0
    total_count = len(tests)
    
    for module_name, description in tests:
        if test_import(module_name, description):
            success_count += 1
        print()
    
    print(f"=== –†–ï–ó–£–õ–¨–¢–ê–¢: {success_count}/{total_count} –º–æ–¥—É–ª–µ–π –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ ===")
    
    if success_count == total_count:
        print("üéâ –í–°–ï –ò–ú–ü–û–†–¢–´ –†–ê–ë–û–¢–ê–Æ–¢! Pydantic v2 —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å OK!")
    else:
        print("‚ùå –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –ò–ú–ü–û–†–¢–ê–ú–ò!")

if __name__ == "__main__":
    main() 