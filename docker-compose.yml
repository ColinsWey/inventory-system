version: '3.8'

services:
  # База данных PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: inventory_db
    environment:
      POSTGRES_DB: inventory_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: inventory_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: inventory_backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/inventory_system
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=inventory_system
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - REDIS_URL=redis://redis:6379
      - DEBUG=true
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend React с Nginx
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: inventory_frontend
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://${SERVER_HOST:-localhost}:8000/api/v1
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_logs:
    driver: local

networks:
  default:
    name: inventory_network 