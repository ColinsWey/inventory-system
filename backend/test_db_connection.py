#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
"""

import os
import sys
import psycopg2
from sqlalchemy import create_engine, text
from app.core.config import settings

def test_psycopg2_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ psycopg2."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ psycopg2...")
    
    try:
        # –ü–∞—Ä—Å–∏–º DATABASE_URL
        db_url = settings.DATABASE_URL
        print(f"üìã DATABASE_URL: {db_url}")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        host = settings.DATABASE_HOST
        port = settings.DATABASE_PORT
        database = settings.DATABASE_NAME
        user = settings.DATABASE_USER
        password = settings.DATABASE_PASSWORD
        
        print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
        print(f"   Host: {host}")
        print(f"   Port: {port}")
        print(f"   Database: {database}")
        print(f"   User: {user}")
        print(f"   Password: {'*' * len(password)}")
        
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
        conn = psycopg2.connect(
            host=host,
            port=port,
            database=database,
            user=user,
            password=password
        )
        
        cursor = conn.cursor()
        cursor.execute("SELECT version();")
        version = cursor.fetchone()
        
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìã PostgreSQL –≤–µ—Ä—Å–∏—è: {version[0]}")
        
        cursor.close()
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è psycopg2: {e}")
        return False

def test_sqlalchemy_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ SQLAlchemy."""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ SQLAlchemy...")
    
    try:
        engine = create_engine(settings.DATABASE_URL)
        
        with engine.connect() as connection:
            result = connection.execute(text("SELECT version();"))
            version = result.fetchone()
            
            print(f"‚úÖ SQLAlchemy –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìã PostgreSQL –≤–µ—Ä—Å–∏—è: {version[0]}")
            
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è SQLAlchemy: {e}")
        return False

def test_database_exists():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ postgres –ë–î –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        conn = psycopg2.connect(
            host=settings.DATABASE_HOST,
            port=settings.DATABASE_PORT,
            database="postgres",  # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –ë–î
            user=settings.DATABASE_USER,
            password=settings.DATABASE_PASSWORD
        )
        
        cursor = conn.cursor()
        cursor.execute(
            "SELECT 1 FROM pg_database WHERE datname = %s;",
            (settings.DATABASE_NAME,)
        )
        
        exists = cursor.fetchone()
        
        if exists:
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{settings.DATABASE_NAME}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{settings.DATABASE_NAME}' –ù–ï —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
            print(f"üí° –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
            
            # –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            conn.autocommit = True
            cursor.execute(f"CREATE DATABASE {settings.DATABASE_NAME};")
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{settings.DATABASE_NAME}' —Å–æ–∑–¥–∞–Ω–∞")
        
        cursor.close()
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL")
    print("=" * 50)
    
    # –í—ã–≤–æ–¥–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print(f"üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ config.py:")
    print(f"   DATABASE_URL: {settings.DATABASE_URL}")
    print(f"   DATABASE_HOST: {settings.DATABASE_HOST}")
    print(f"   DATABASE_PORT: {settings.DATABASE_PORT}")
    print(f"   DATABASE_NAME: {settings.DATABASE_NAME}")
    print(f"   DATABASE_USER: {settings.DATABASE_USER}")
    print(f"   DATABASE_PASSWORD: {'*' * len(settings.DATABASE_PASSWORD)}")
    
    # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print(f"\nüìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    env_vars = [
        'DATABASE_URL', 'DATABASE_HOST', 'DATABASE_PORT', 
        'DATABASE_NAME', 'DATABASE_USER', 'DATABASE_PASSWORD'
    ]
    for var in env_vars:
        value = os.getenv(var, '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')
        if 'PASSWORD' in var and value != '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê':
            value = '*' * len(value)
        print(f"   {var}: {value}")
    
    print("\n" + "=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    success = True
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ë–î
    if not test_database_exists():
        success = False
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º psycopg2
    if not test_psycopg2_connection():
        success = False
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º SQLAlchemy
    if not test_sqlalchemy_connection():
        success = False
    
    print("\n" + "=" * 50)
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("üí• –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ï–ú!")
        print("‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL")
        sys.exit(1)

if __name__ == "__main__":
    main() 