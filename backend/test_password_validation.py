#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
"""

from app.api.v1.schemas.auth import LoginRequest, UserCreate, PasswordChange
from pydantic import ValidationError

def test_login_password_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è –≤ LoginRequest."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è –≤ LoginRequest...")
    
    # –¢–µ—Å—Ç —Å –ø–∞—Ä–æ–ª–µ–º "admin" (5 —Å–∏–º–≤–æ–ª–æ–≤)
    try:
        req = LoginRequest(username="admin", password="admin")
        print("‚úÖ –ü–∞—Ä–æ–ª—å 'admin' (5 —Å–∏–º–≤–æ–ª–æ–≤) –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
    except ValidationError as e:
        print(f"‚ùå –ü–∞—Ä–æ–ª—å 'admin' –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
        return False
    
    # –¢–µ—Å—Ç —Å –∫–æ—Ä–æ—Ç–∫–∏–º –ø–∞—Ä–æ–ª–µ–º (2 —Å–∏–º–≤–æ–ª–∞)
    try:
        req = LoginRequest(username="admin", password="ab")
        print("‚ùå –ü–∞—Ä–æ–ª—å 'ab' (2 —Å–∏–º–≤–æ–ª–æ–≤) –ù–ï –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é!")
        return False
    except ValidationError:
        print("‚úÖ –ü–∞—Ä–æ–ª—å 'ab' (2 —Å–∏–º–≤–æ–ª–∞) –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω")
    
    # –¢–µ—Å—Ç —Å –¥–ª–∏–Ω–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
    try:
        req = LoginRequest(username="admin", password="admin123")
        print("‚úÖ –ü–∞—Ä–æ–ª—å 'admin123' (8 —Å–∏–º–≤–æ–ª–æ–≤) –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
    except ValidationError as e:
        print(f"‚ùå –ü–∞—Ä–æ–ª—å 'admin123' –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
        return False
    
    return True

def test_user_create_password_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è –≤ UserCreate."""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è –≤ UserCreate...")
    
    try:
        user = UserCreate(
            username="testuser",
            email="test@example.com",
            password="admin"  # 5 —Å–∏–º–≤–æ–ª–æ–≤
        )
        print("‚úÖ –ü–∞—Ä–æ–ª—å 'admin' –≤ UserCreate –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
        return True
    except ValidationError as e:
        print(f"‚ùå –ü–∞—Ä–æ–ª—å 'admin' –≤ UserCreate –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
        return False

def test_password_change_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è –≤ PasswordChange."""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è –≤ PasswordChange...")
    
    try:
        change = PasswordChange(
            current_password="old",
            new_password="new"  # 3 —Å–∏–º–≤–æ–ª–∞ - –º–∏–Ω–∏–º—É–º
        )
        print("‚úÖ –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å 'new' (3 —Å–∏–º–≤–æ–ª–∞) –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
        return True
    except ValidationError as e:
        print(f"‚ùå –ù–æ–≤—ã–π –ø–∞—Ä–æ–ª—å 'new' –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª–µ–π –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    print("=" * 60)
    
    success = True
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å—Ö–µ–º—ã
    if not test_login_password_validation():
        success = False
    
    if not test_user_create_password_validation():
        success = False
    
    if not test_password_change_validation():
        success = False
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ü–∞—Ä–æ–ª—å 'admin' —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é –≤–æ –≤—Å–µ—Ö —Å—Ö–µ–º–∞—Ö")
        print("‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è –∏–∑–º–µ–Ω–µ–Ω–∞ —Å 6 –Ω–∞ 3 —Å–∏–º–≤–æ–ª–∞")
        print("\nüí° –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–æ–π—Ç–∏ —Å –¥–∞–Ω–Ω—ã–º–∏: admin/admin")
    else:
        print("üí• –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –í–ê–õ–ò–î–ê–¶–ò–ï–ô!")
        print("‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ö–µ–º")

if __name__ == "__main__":
    main() 