#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
"""

from app.api.v1.schemas.auth import UserInfo, UserCreate, UserUpdate
from pydantic import ValidationError

def test_userinfo_email_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email –≤ UserInfo."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email –≤ UserInfo...")
    
    # –¢–µ—Å—Ç —Å .local –¥–æ–º–µ–Ω–æ–º
    try:
        user = UserInfo(
            id="123",
            username="admin",
            email="admin@inventory.local",
            role="admin",
            is_active=True
        )
        print("‚úÖ Email 'admin@inventory.local' –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
    except ValidationError as e:
        print(f"‚ùå Email 'admin@inventory.local' –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
        return False
    
    # –¢–µ—Å—Ç —Å –æ–±—ã—á–Ω—ã–º email
    try:
        user = UserInfo(
            id="123",
            username="user",
            email="user@example.com",
            role="viewer",
            is_active=True
        )
        print("‚úÖ Email 'user@example.com' –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
    except ValidationError as e:
        print(f"‚ùå Email 'user@example.com' –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
        return False
    
    # –¢–µ—Å—Ç —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º email
    try:
        user = UserInfo(
            id="123",
            username="bad",
            email="invalid-email",
            role="viewer",
            is_active=True
        )
        print("‚ùå Email 'invalid-email' –ù–ï –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é!")
        return False
    except ValidationError:
        print("‚úÖ Email 'invalid-email' –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω")
    
    return True

def test_usercreate_email_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email –≤ UserCreate."""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email –≤ UserCreate...")
    
    try:
        user = UserCreate(
            username="testuser",
            email="admin@inventory.local",
            password="admin"
        )
        print("‚úÖ Email 'admin@inventory.local' –≤ UserCreate –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
        return True
    except ValidationError as e:
        print(f"‚ùå Email 'admin@inventory.local' –≤ UserCreate –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
        return False

def test_userupdate_email_validation():
    """–¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email –≤ UserUpdate."""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email –≤ UserUpdate...")
    
    # –¢–µ—Å—Ç —Å .local –¥–æ–º–µ–Ω–æ–º
    try:
        update = UserUpdate(email="manager@inventory.local")
        print("‚úÖ Email 'manager@inventory.local' –≤ UserUpdate –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
    except ValidationError as e:
        print(f"‚ùå Email 'manager@inventory.local' –≤ UserUpdate –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
        return False
    
    # –¢–µ—Å—Ç —Å None (–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è Optional –ø–æ–ª—è)
    try:
        update = UserUpdate(email=None)
        print("‚úÖ Email None –≤ UserUpdate –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
    except ValidationError as e:
        print(f"‚ùå Email None –≤ UserUpdate –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
        return False
    
    # –¢–µ—Å—Ç –±–µ–∑ email –ø–æ–ª—è
    try:
        update = UserUpdate(first_name="–¢–µ—Å—Ç")
        print("‚úÖ UserUpdate –±–µ–∑ email –ø–æ–ª—è –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
        return True
    except ValidationError as e:
        print(f"‚ùå UserUpdate –±–µ–∑ email –ø–æ–ª—è –Ω–µ –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
        return False

def test_various_email_formats():
    """–¢–µ—Å—Ç —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ email."""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ email...")
    
    valid_emails = [
        "admin@inventory.local",
        "user@example.com",
        "test.user@domain.org",
        "user+tag@example.co.uk",
        "123@test.local"
    ]
    
    invalid_emails = [
        "invalid-email",
        "@domain.com",
        "user@",
        "user@domain",
        "user.domain.com"
    ]
    
    success = True
    
    # –¢–µ—Å—Ç –≤–∞–ª–∏–¥–Ω—ã—Ö email
    for email in valid_emails:
        try:
            user = UserInfo(
                id="123",
                username="test",
                email=email,
                role="viewer",
                is_active=True
            )
            print(f"‚úÖ Email '{email}' –ø—Ä–æ—à–µ–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é")
        except ValidationError as e:
            print(f"‚ùå Email '{email}' –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é: {e}")
            success = False
    
    # –¢–µ—Å—Ç –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö email
    for email in invalid_emails:
        try:
            user = UserInfo(
                id="123",
                username="test",
                email=email,
                role="viewer",
                is_active=True
            )
            print(f"‚ùå Email '{email}' –ù–ï –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é!")
            success = False
        except ValidationError:
            print(f"‚úÖ Email '{email}' –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω")
    
    return success

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ email –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    print("=" * 60)
    
    success = True
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å—Ö–µ–º—ã
    if not test_userinfo_email_validation():
        success = False
    
    if not test_usercreate_email_validation():
        success = False
    
    if not test_userupdate_email_validation():
        success = False
    
    if not test_various_email_formats():
        success = False
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ Email 'admin@inventory.local' —Ç–µ–ø–µ—Ä—å –ø—Ä–æ—Ö–æ–¥–∏—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é")
        print("‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ email, —Ç–∞–∫ –∏ .local –¥–æ–º–µ–Ω—ã")
        print("‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("\nüí° Backend –±–æ–ª—å—à–µ –Ω–µ –ø–∞–¥–∞–µ—Ç –Ω–∞ email —Å .local –¥–æ–º–µ–Ω–∞–º–∏")
    else:
        print("üí• –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´ –° –í–ê–õ–ò–î–ê–¶–ò–ï–ô EMAIL!")
        print("‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞–ª–∏–¥–∞—Ç–æ—Ä–æ–≤")

if __name__ == "__main__":
    main() 